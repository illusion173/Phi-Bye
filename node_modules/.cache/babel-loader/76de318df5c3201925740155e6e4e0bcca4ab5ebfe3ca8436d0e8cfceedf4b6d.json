{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { ConsoleLogger as Logger, StorageAction } from '@aws-amplify/core';\nimport { putObject, createMultipartUpload, uploadPart, completeMultipartUpload, abortMultipartUpload, listParts } from '../AwsClients/S3';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT } from '../AwsClients/S3/utils';\nimport { EventEmitter } from 'events';\nimport { calculatePartSize, DEFAULT_PART_SIZE, DEFAULT_QUEUE_SIZE, MAX_OBJECT_SIZE, loadS3Config, getPrefix, credentialsProvider } from '../common/S3ClientUtils';\nvar logger = new Logger('AWSS3ProviderManagedUpload');\nvar AWSS3ProviderManagedUpload = /** @class */function () {\n  function AWSS3ProviderManagedUpload(params, opts, emitter) {\n    this.opts = null;\n    this.completedParts = [];\n    this.partSize = DEFAULT_PART_SIZE;\n    // Progress reporting\n    this.bytesUploaded = 0;\n    this.totalBytesToUpload = 0;\n    this.emitter = null;\n    this.params = params;\n    this.opts = opts;\n    this.emitter = emitter;\n    this.s3Config = loadS3Config(__assign(__assign({}, opts), {\n      emitter: emitter,\n      storageAction: StorageAction.Put\n    }));\n  }\n  AWSS3ProviderManagedUpload.prototype.upload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b, _c, _d, numberOfPartsToUpload, parts, start, error_1;\n      var _e;\n      var _this = this;\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            _f.trys.push([0, 10,, 12]);\n            this.body = this.validateAndSanitizeBody(this.params.Body);\n            this.totalBytesToUpload = this.byteLength(this.body);\n            if (!(this.totalBytesToUpload <= DEFAULT_PART_SIZE)) return [3 /*break*/, 2];\n            // Multipart upload is not required. Upload the sanitized body as is\n            this.params.Body = this.body;\n            _a = putObject;\n            _b = [this.s3Config];\n            _c = [__assign({}, this.params)];\n            _e = {};\n            return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n          case 1:\n            return [2 /*return*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_e.Key = _f.sent(), _e)]))]))];\n          case 2:\n            // Step 1: Determine appropriate part size.\n            this.partSize = calculatePartSize(this.totalBytesToUpload);\n            // Step 2: Initiate the multi part upload\n            _d = this;\n            return [4 /*yield*/, this.createMultiPartUpload()];\n          case 3:\n            // Step 2: Initiate the multi part upload\n            _d.uploadId = _f.sent();\n            numberOfPartsToUpload = Math.ceil(this.totalBytesToUpload / this.partSize);\n            parts = this.createParts();\n            start = 0;\n            _f.label = 4;\n          case 4:\n            if (!(start < numberOfPartsToUpload)) return [3 /*break*/, 7];\n            // Upload as many as `queueSize` parts simultaneously\n            return [4 /*yield*/, this.uploadParts(this.uploadId, parts.slice(start, start + DEFAULT_QUEUE_SIZE))];\n          case 5:\n            // Upload as many as `queueSize` parts simultaneously\n            _f.sent();\n            _f.label = 6;\n          case 6:\n            start += DEFAULT_QUEUE_SIZE;\n            return [3 /*break*/, 4];\n          case 7:\n            parts.map(function (part) {\n              _this.removeEventListener(part);\n            });\n            return [4 /*yield*/, this.finishMultiPartUpload(this.uploadId)];\n          case 8:\n            // Step 3: Finalize the upload such that S3 can recreate the file\n            return [2 /*return*/, _f.sent()];\n          case 9:\n            return [3 /*break*/, 12];\n          case 10:\n            error_1 = _f.sent();\n            // if any error is thrown, call cleanup\n            return [4 /*yield*/, this.cleanup(this.uploadId)];\n          case 11:\n            // if any error is thrown, call cleanup\n            _f.sent();\n            logger.error('Error. Cancelling the multipart upload.');\n            throw error_1;\n          case 12:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.createParts = function () {\n    try {\n      var parts = [];\n      for (var bodyStart = 0; bodyStart < this.totalBytesToUpload;) {\n        var bodyEnd = Math.min(bodyStart + this.partSize, this.totalBytesToUpload);\n        parts.push({\n          bodyPart: this.body.slice(bodyStart, bodyEnd),\n          partNumber: parts.length + 1,\n          emitter: new EventEmitter(),\n          _lastUploadedBytes: 0\n        });\n        bodyStart += this.partSize;\n      }\n      return parts;\n    } catch (error) {\n      logger.error(error);\n      throw error;\n    }\n  };\n  AWSS3ProviderManagedUpload.prototype.createMultiPartUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, _a, _b, _c, error_2;\n      var _d;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _e.trys.push([0, 3,, 4]);\n            _a = createMultipartUpload;\n            _b = [this.s3Config];\n            _c = [__assign({}, this.params)];\n            _d = {};\n            return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n          case 1:\n            return [4 /*yield*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = _e.sent(), _d)]))]))];\n          case 2:\n            response = _e.sent();\n            logger.debug(response.UploadId);\n            return [2 /*return*/, response.UploadId];\n          case 3:\n            error_2 = _e.sent();\n            logger.error(error_2);\n            throw error_2;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * @private Not to be extended outside of tests\n   * @VisibleFotTesting\n   */\n  AWSS3ProviderManagedUpload.prototype.uploadParts = function (uploadId, parts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var allResults, i, error_3;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, Promise.all(parts.map(function (part) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a, Key, Bucket, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, res, _b, _c;\n                var _d;\n                return __generator(this, function (_e) {\n                  switch (_e.label) {\n                    case 0:\n                      this.setupEventListener(part);\n                      _a = this.params, Key = _a.Key, Bucket = _a.Bucket, SSECustomerAlgorithm = _a.SSECustomerAlgorithm, SSECustomerKey = _a.SSECustomerKey, SSECustomerKeyMD5 = _a.SSECustomerKeyMD5;\n                      _b = uploadPart;\n                      _c = [__assign(__assign({}, this.s3Config), {\n                        emitter: part.emitter\n                      })];\n                      _d = {\n                        PartNumber: part.partNumber,\n                        Body: part.bodyPart,\n                        UploadId: uploadId\n                      };\n                      return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                    case 1:\n                      return [4 /*yield*/, _b.apply(void 0, _c.concat([(_d.Key = _e.sent(), _d.Bucket = Bucket, _d.SSECustomerAlgorithm = SSECustomerAlgorithm, _d.SSECustomerKey = SSECustomerKey, _d.SSECustomerKeyMD5 = SSECustomerKeyMD5, _d)]))];\n                    case 2:\n                      res = _e.sent();\n                      return [2 /*return*/, res];\n                  }\n                });\n              });\n            }))];\n          case 1:\n            allResults = _a.sent();\n            // The order of resolved promises is the same as input promise order.\n            for (i = 0; i < allResults.length; i++) {\n              this.completedParts.push({\n                PartNumber: parts[i].partNumber,\n                ETag: allResults[i].ETag\n              });\n            }\n            return [3 /*break*/, 3];\n          case 2:\n            error_3 = _a.sent();\n            logger.error('Error happened while uploading a part. Cancelling the multipart upload');\n            throw error_3;\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.finishMultiPartUpload = function (uploadId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var input, Key, error_4;\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = {\n              Bucket: this.params.Bucket\n            };\n            return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n          case 1:\n            input = (_a.Key = _b.sent(), _a.UploadId = uploadId, _a.MultipartUpload = {\n              Parts: this.completedParts\n            }, _a);\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, completeMultipartUpload(this.s3Config, input)];\n          case 3:\n            Key = _b.sent().Key;\n            return [2 /*return*/, Key];\n          case 4:\n            error_4 = _b.sent();\n            logger.error('Error happened while finishing the upload.');\n            throw error_4;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.cleanup = function (uploadId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var input, data;\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // Reset this's state\n            this.body = null;\n            this.completedParts = [];\n            this.bytesUploaded = 0;\n            this.totalBytesToUpload = 0;\n            if (!uploadId) {\n              // This is a single part upload;\n              return [2 /*return*/];\n            }\n\n            _a = {\n              Bucket: this.params.Bucket\n            };\n            return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n          case 1:\n            input = (_a.Key = _b.sent(), _a.UploadId = uploadId, _a);\n            return [4 /*yield*/, abortMultipartUpload(this.s3Config, input)];\n          case 2:\n            _b.sent();\n            return [4 /*yield*/, listParts(this.s3Config, input)];\n          case 3:\n            data = _b.sent();\n            if (data && data.Parts && data.Parts.length > 0) {\n              throw new Error('Multipart upload clean up failed.');\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.removeEventListener = function (part) {\n    part.emitter.removeAllListeners(SEND_UPLOAD_PROGRESS_EVENT);\n    part.emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n  };\n  AWSS3ProviderManagedUpload.prototype.setupEventListener = function (part) {\n    var _this = this;\n    part.emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n      _this.progressChanged(part.partNumber, progress.loaded - part._lastUploadedBytes);\n      part._lastUploadedBytes = progress.loaded;\n    });\n  };\n  AWSS3ProviderManagedUpload.prototype.progressChanged = function (partNumber, incrementalUpdate) {\n    this.bytesUploaded += incrementalUpdate;\n    this.emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, {\n      loaded: this.bytesUploaded,\n      total: this.totalBytesToUpload,\n      part: partNumber,\n      key: this.params.Key\n    });\n  };\n  AWSS3ProviderManagedUpload.prototype.byteLength = function (input) {\n    if (input === null || input === undefined) return 0;\n    if (typeof input.byteLength === 'number') {\n      return input.byteLength;\n    } else if (typeof input.length === 'number') {\n      return input.length;\n    } else if (typeof input.size === 'number') {\n      return input.size;\n    } else if (typeof input.path === 'string') {\n      /* NodeJs Support\n      return require('fs').lstatSync(input.path).size;\n      */\n    } else {\n      throw new Error('Cannot determine length of ' + input);\n    }\n  };\n  AWSS3ProviderManagedUpload.prototype.validateAndSanitizeBody = function (body) {\n    var sanitizedBody = this.isGenericObject(body) ? JSON.stringify(body) : body;\n    /* TODO: streams and files for nodejs\n    if (\n        typeof body.path === 'string' &&\n        require('fs').lstatSync(body.path).size > 0\n    ) {\n        sanitizedBody = body;\n    } */\n    if (this.byteLength(sanitizedBody) > MAX_OBJECT_SIZE) {\n      throw new Error(\"File size bigger than S3 Object limit of 5TB, got \".concat(this.totalBytesToUpload, \" Bytes\"));\n    }\n    return sanitizedBody;\n  };\n  AWSS3ProviderManagedUpload.prototype.isGenericObject = function (body) {\n    if (body !== null && typeof body === 'object') {\n      try {\n        return !(this.byteLength(body) >= 0);\n      } catch (error) {\n        // If we cannot determine the length of the body, consider it\n        // as a generic object and upload a stringified version of it\n        return true;\n      }\n    }\n    return false;\n  };\n  AWSS3ProviderManagedUpload.prototype.getObjectKeyWithPrefix = function (keyWithoutPrefix) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b;\n      var _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = getPrefix;\n            _b = [__assign({}, this.opts)];\n            _c = {};\n            return [4 /*yield*/, credentialsProvider()];\n          case 1:\n            return [4 /*yield*/, _a.apply(void 0, [__assign.apply(void 0, _b.concat([(_c.credentials = _d.sent(), _c)]))])];\n          case 2:\n            return [2 /*return*/, _d.sent() + keyWithoutPrefix];\n        }\n      });\n    });\n  };\n  return AWSS3ProviderManagedUpload;\n}();\nexport { AWSS3ProviderManagedUpload };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","ConsoleLogger","Logger","StorageAction","putObject","createMultipartUpload","uploadPart","completeMultipartUpload","abortMultipartUpload","listParts","SEND_DOWNLOAD_PROGRESS_EVENT","SEND_UPLOAD_PROGRESS_EVENT","EventEmitter","calculatePartSize","DEFAULT_PART_SIZE","DEFAULT_QUEUE_SIZE","MAX_OBJECT_SIZE","loadS3Config","getPrefix","credentialsProvider","logger","AWSS3ProviderManagedUpload","params","opts","emitter","completedParts","partSize","bytesUploaded","totalBytesToUpload","s3Config","storageAction","Put","upload","_a","_b","_c","_d","numberOfPartsToUpload","parts","start","error_1","_e","_this","_f","validateAndSanitizeBody","Body","byteLength","getObjectKeyWithPrefix","Key","concat","createMultiPartUpload","uploadId","Math","ceil","createParts","uploadParts","slice","map","part","removeEventListener","finishMultiPartUpload","cleanup","error","bodyStart","bodyEnd","min","bodyPart","partNumber","_lastUploadedBytes","response","error_2","debug","UploadId","allResults","error_3","all","Bucket","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","res","setupEventListener","PartNumber","ETag","input","error_4","MultipartUpload","Parts","data","Error","removeAllListeners","on","progress","progressChanged","loaded","incrementalUpdate","emit","total","key","undefined","size","path","sanitizedBody","isGenericObject","JSON","stringify","keyWithoutPrefix","credentials"],"sources":["/Users/illusjw/Desktop/Internship_Files/Code/website/amplify-phi-bye/node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3ProviderManagedUpload.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ConsoleLogger as Logger, StorageAction } from '@aws-amplify/core';\nimport { putObject, createMultipartUpload, uploadPart, completeMultipartUpload, abortMultipartUpload, listParts, } from '../AwsClients/S3';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT, } from '../AwsClients/S3/utils';\nimport { EventEmitter } from 'events';\nimport { calculatePartSize, DEFAULT_PART_SIZE, DEFAULT_QUEUE_SIZE, MAX_OBJECT_SIZE, loadS3Config, getPrefix, credentialsProvider, } from '../common/S3ClientUtils';\nvar logger = new Logger('AWSS3ProviderManagedUpload');\nvar AWSS3ProviderManagedUpload = /** @class */ (function () {\n    function AWSS3ProviderManagedUpload(params, opts, emitter) {\n        this.opts = null;\n        this.completedParts = [];\n        this.partSize = DEFAULT_PART_SIZE;\n        // Progress reporting\n        this.bytesUploaded = 0;\n        this.totalBytesToUpload = 0;\n        this.emitter = null;\n        this.params = params;\n        this.opts = opts;\n        this.emitter = emitter;\n        this.s3Config = loadS3Config(__assign(__assign({}, opts), { emitter: emitter, storageAction: StorageAction.Put }));\n    }\n    AWSS3ProviderManagedUpload.prototype.upload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, _c, _d, numberOfPartsToUpload, parts, start, error_1;\n            var _e;\n            var _this = this;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        _f.trys.push([0, 10, , 12]);\n                        this.body = this.validateAndSanitizeBody(this.params.Body);\n                        this.totalBytesToUpload = this.byteLength(this.body);\n                        if (!(this.totalBytesToUpload <= DEFAULT_PART_SIZE)) return [3 /*break*/, 2];\n                        // Multipart upload is not required. Upload the sanitized body as is\n                        this.params.Body = this.body;\n                        _a = putObject;\n                        _b = [this.s3Config];\n                        _c = [__assign({}, this.params)];\n                        _e = {};\n                        return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                    case 1: return [2 /*return*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_e.Key = _f.sent(), _e)]))]))];\n                    case 2:\n                        // Step 1: Determine appropriate part size.\n                        this.partSize = calculatePartSize(this.totalBytesToUpload);\n                        // Step 2: Initiate the multi part upload\n                        _d = this;\n                        return [4 /*yield*/, this.createMultiPartUpload()];\n                    case 3:\n                        // Step 2: Initiate the multi part upload\n                        _d.uploadId = _f.sent();\n                        numberOfPartsToUpload = Math.ceil(this.totalBytesToUpload / this.partSize);\n                        parts = this.createParts();\n                        start = 0;\n                        _f.label = 4;\n                    case 4:\n                        if (!(start < numberOfPartsToUpload)) return [3 /*break*/, 7];\n                        // Upload as many as `queueSize` parts simultaneously\n                        return [4 /*yield*/, this.uploadParts(this.uploadId, parts.slice(start, start + DEFAULT_QUEUE_SIZE))];\n                    case 5:\n                        // Upload as many as `queueSize` parts simultaneously\n                        _f.sent();\n                        _f.label = 6;\n                    case 6:\n                        start += DEFAULT_QUEUE_SIZE;\n                        return [3 /*break*/, 4];\n                    case 7:\n                        parts.map(function (part) {\n                            _this.removeEventListener(part);\n                        });\n                        return [4 /*yield*/, this.finishMultiPartUpload(this.uploadId)];\n                    case 8: \n                    // Step 3: Finalize the upload such that S3 can recreate the file\n                    return [2 /*return*/, _f.sent()];\n                    case 9: return [3 /*break*/, 12];\n                    case 10:\n                        error_1 = _f.sent();\n                        // if any error is thrown, call cleanup\n                        return [4 /*yield*/, this.cleanup(this.uploadId)];\n                    case 11:\n                        // if any error is thrown, call cleanup\n                        _f.sent();\n                        logger.error('Error. Cancelling the multipart upload.');\n                        throw error_1;\n                    case 12: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.createParts = function () {\n        try {\n            var parts = [];\n            for (var bodyStart = 0; bodyStart < this.totalBytesToUpload;) {\n                var bodyEnd = Math.min(bodyStart + this.partSize, this.totalBytesToUpload);\n                parts.push({\n                    bodyPart: this.body.slice(bodyStart, bodyEnd),\n                    partNumber: parts.length + 1,\n                    emitter: new EventEmitter(),\n                    _lastUploadedBytes: 0,\n                });\n                bodyStart += this.partSize;\n            }\n            return parts;\n        }\n        catch (error) {\n            logger.error(error);\n            throw error;\n        }\n    };\n    AWSS3ProviderManagedUpload.prototype.createMultiPartUpload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, _a, _b, _c, error_2;\n            var _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _e.trys.push([0, 3, , 4]);\n                        _a = createMultipartUpload;\n                        _b = [this.s3Config];\n                        _c = [__assign({}, this.params)];\n                        _d = {};\n                        return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = _e.sent(), _d)]))]))];\n                    case 2:\n                        response = _e.sent();\n                        logger.debug(response.UploadId);\n                        return [2 /*return*/, response.UploadId];\n                    case 3:\n                        error_2 = _e.sent();\n                        logger.error(error_2);\n                        throw error_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @private Not to be extended outside of tests\n     * @VisibleFotTesting\n     */\n    AWSS3ProviderManagedUpload.prototype.uploadParts = function (uploadId, parts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var allResults, i, error_3;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, Promise.all(parts.map(function (part) { return __awaiter(_this, void 0, void 0, function () {\n                                var _a, Key, Bucket, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, res, _b, _c;\n                                var _d;\n                                return __generator(this, function (_e) {\n                                    switch (_e.label) {\n                                        case 0:\n                                            this.setupEventListener(part);\n                                            _a = this.params, Key = _a.Key, Bucket = _a.Bucket, SSECustomerAlgorithm = _a.SSECustomerAlgorithm, SSECustomerKey = _a.SSECustomerKey, SSECustomerKeyMD5 = _a.SSECustomerKeyMD5;\n                                            _b = uploadPart;\n                                            _c = [__assign(__assign({}, this.s3Config), { emitter: part.emitter })];\n                                            _d = {\n                                                PartNumber: part.partNumber,\n                                                Body: part.bodyPart,\n                                                UploadId: uploadId\n                                            };\n                                            return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                                        case 1: return [4 /*yield*/, _b.apply(void 0, _c.concat([(_d.Key = _e.sent(),\n                                                    _d.Bucket = Bucket,\n                                                    _d.SSECustomerAlgorithm = SSECustomerAlgorithm,\n                                                    _d.SSECustomerKey = SSECustomerKey,\n                                                    _d.SSECustomerKeyMD5 = SSECustomerKeyMD5,\n                                                    _d)]))];\n                                        case 2:\n                                            res = _e.sent();\n                                            return [2 /*return*/, res];\n                                    }\n                                });\n                            }); }))];\n                    case 1:\n                        allResults = _a.sent();\n                        // The order of resolved promises is the same as input promise order.\n                        for (i = 0; i < allResults.length; i++) {\n                            this.completedParts.push({\n                                PartNumber: parts[i].partNumber,\n                                ETag: allResults[i].ETag,\n                            });\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_3 = _a.sent();\n                        logger.error('Error happened while uploading a part. Cancelling the multipart upload');\n                        throw error_3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.finishMultiPartUpload = function (uploadId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var input, Key, error_4;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                    case 1:\n                        input = (_a.Key = _b.sent(),\n                            _a.UploadId = uploadId,\n                            _a.MultipartUpload = { Parts: this.completedParts },\n                            _a);\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, completeMultipartUpload(this.s3Config, input)];\n                    case 3:\n                        Key = (_b.sent()).Key;\n                        return [2 /*return*/, Key];\n                    case 4:\n                        error_4 = _b.sent();\n                        logger.error('Error happened while finishing the upload.');\n                        throw error_4;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.cleanup = function (uploadId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var input, data;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // Reset this's state\n                        this.body = null;\n                        this.completedParts = [];\n                        this.bytesUploaded = 0;\n                        this.totalBytesToUpload = 0;\n                        if (!uploadId) {\n                            // This is a single part upload;\n                            return [2 /*return*/];\n                        }\n                        _a = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                    case 1:\n                        input = (_a.Key = _b.sent(),\n                            _a.UploadId = uploadId,\n                            _a);\n                        return [4 /*yield*/, abortMultipartUpload(this.s3Config, input)];\n                    case 2:\n                        _b.sent();\n                        return [4 /*yield*/, listParts(this.s3Config, input)];\n                    case 3:\n                        data = _b.sent();\n                        if (data && data.Parts && data.Parts.length > 0) {\n                            throw new Error('Multipart upload clean up failed.');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.removeEventListener = function (part) {\n        part.emitter.removeAllListeners(SEND_UPLOAD_PROGRESS_EVENT);\n        part.emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n    };\n    AWSS3ProviderManagedUpload.prototype.setupEventListener = function (part) {\n        var _this = this;\n        part.emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n            _this.progressChanged(part.partNumber, progress.loaded - part._lastUploadedBytes);\n            part._lastUploadedBytes = progress.loaded;\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.progressChanged = function (partNumber, incrementalUpdate) {\n        this.bytesUploaded += incrementalUpdate;\n        this.emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, {\n            loaded: this.bytesUploaded,\n            total: this.totalBytesToUpload,\n            part: partNumber,\n            key: this.params.Key,\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.byteLength = function (input) {\n        if (input === null || input === undefined)\n            return 0;\n        if (typeof input.byteLength === 'number') {\n            return input.byteLength;\n        }\n        else if (typeof input.length === 'number') {\n            return input.length;\n        }\n        else if (typeof input.size === 'number') {\n            return input.size;\n        }\n        else if (typeof input.path === 'string') {\n            /* NodeJs Support\n            return require('fs').lstatSync(input.path).size;\n            */\n        }\n        else {\n            throw new Error('Cannot determine length of ' + input);\n        }\n    };\n    AWSS3ProviderManagedUpload.prototype.validateAndSanitizeBody = function (body) {\n        var sanitizedBody = this.isGenericObject(body)\n            ? JSON.stringify(body)\n            : body;\n        /* TODO: streams and files for nodejs\n        if (\n            typeof body.path === 'string' &&\n            require('fs').lstatSync(body.path).size > 0\n        ) {\n            sanitizedBody = body;\n        } */\n        if (this.byteLength(sanitizedBody) > MAX_OBJECT_SIZE) {\n            throw new Error(\"File size bigger than S3 Object limit of 5TB, got \".concat(this.totalBytesToUpload, \" Bytes\"));\n        }\n        return sanitizedBody;\n    };\n    AWSS3ProviderManagedUpload.prototype.isGenericObject = function (body) {\n        if (body !== null && typeof body === 'object') {\n            try {\n                return !(this.byteLength(body) >= 0);\n            }\n            catch (error) {\n                // If we cannot determine the length of the body, consider it\n                // as a generic object and upload a stringified version of it\n                return true;\n            }\n        }\n        return false;\n    };\n    AWSS3ProviderManagedUpload.prototype.getObjectKeyWithPrefix = function (keyWithoutPrefix) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = getPrefix;\n                        _b = [__assign({}, this.opts)];\n                        _c = {};\n                        return [4 /*yield*/, credentialsProvider()];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, [__assign.apply(void 0, _b.concat([(_c.credentials = _d.sent(), _c)]))])];\n                    case 2: return [2 /*return*/, ((_d.sent()) + keyWithoutPrefix)];\n                }\n            });\n        });\n    };\n    return AWSS3ProviderManagedUpload;\n}());\nexport { AWSS3ProviderManagedUpload };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}